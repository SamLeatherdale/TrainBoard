/**
 * Trip Planner
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AdditionalInfoResponseTimestamps } from './additionalInfoResponseTimestamps';

/**
 * This element describes a single service alert.
 */
export interface AdditionalInfoResponseMessage { 
    /**
     * This indicates the category of the service alert. For example, if this value is `stopInfo`, then the alert is related to an issue affecting a stop. It is then likely that the affected lines would be those that stop at the affected stop.  * `routeInfo`: The alert is related to a specific route * `stopInfo`: The alert is related to a specific stop * `lineInfo`: XXX * `bannerInfo`: The alert of high importance and potentially has a network-wide impact. 
     */
    type?: AdditionalInfoResponseMessage.TypeEnum;
    /**
     * This field uniquely identifies which operator or organisation entered the alert into the system. 
     */
    providerCode?: string;
    /**
     * This is a unique identifier for this particular service alert. 
     */
    id?: string;
    /**
     * This number indicates the version of this alert. Initially when it is created it has version `1`, but if it is then updated it will have a new `lastModification` value and the version will now be `2`. 
     */
    version?: number;
    /**
     * This value indicates how important the service alert is. A value of `high` or `veryHigh` likely indicates that the alert will correspond to an event that impacts the ability to travel for relevant users, while `low` or `veryLow` might be more of an informational message. 
     */
    priority?: AdditionalInfoResponseMessage.PriorityEnum;
    timestamps?: AdditionalInfoResponseTimestamps;
    /**
     * This is the descriptive alert content. It may contain HTML tags and/or HTML entities. 
     */
    content?: string;
    /**
     * This is short summary that can be used as a heading for the alert content. It may contain HTML tags and/or HTML entities. 
     */
    subtitle?: string;
    /**
     * This field contains a URL that contains additional information about the alert.
     */
    url?: string;
    /**
     * This field contains a title that can be used when displaying the `infoLinkURL` URL.
     */
    urlText?: string;
    /**
     * This element contains a additional information about the alert. 
     */
    properties?: any;
    /**
     * This contains details about the lines and stops that are impacted by the described alert. 
     */
    affected?: any;
}
export namespace AdditionalInfoResponseMessage {
    export type TypeEnum = 'routeInfo' | 'stopInfo' | 'lineInfo' | 'bannerInfo';
    export const TypeEnum = {
        RouteInfo: 'routeInfo' as TypeEnum,
        StopInfo: 'stopInfo' as TypeEnum,
        LineInfo: 'lineInfo' as TypeEnum,
        BannerInfo: 'bannerInfo' as TypeEnum
    };
    export type PriorityEnum = 'veryLow' | 'low' | 'normal' | 'high' | 'veryHigh';
    export const PriorityEnum = {
        VeryLow: 'veryLow' as PriorityEnum,
        Low: 'low' as PriorityEnum,
        Normal: 'normal' as PriorityEnum,
        High: 'high' as PriorityEnum,
        VeryHigh: 'veryHigh' as PriorityEnum
    };
}